@model WebAppRedo.Data.Models.ReminderEditVM

@{
    ViewData["Title"] = "Edit";
}

<h1 class="text-center">Edit Reminder</h1>
<br />
<hr />
<br />
<div class="container text-center">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group col">
                <label asp-for="Name" class="control-label fw-bold"></label>
                    <input asp-for="Name" class="form-control bg-light" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group col">
                    <label asp-for="Description" class="control-label fw-bold"></label>
                    <input asp-for="Description" class="form-control bg-light" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="row justify-content-between">
                <div class="form-group form-check form-switch col-md-6 ">
                    <label class="form-check-label fw-bold">
                            <input class="form-check-input" asp-for="HasAlarms" id="hasAlarm" onclick="toggleAlarm()"/> @Html.DisplayNameFor(model => model.HasAlarms)
                    </label>
                        <span asp-validation-for="HasAlarms" class="text-danger" ></span>
                </div>

                <div class="form-group form-check form-switch col-md-6">
                        <label class="form-check-label fw-bold">
                            <input class="form-check-input" asp-for="Periodic" id="hasPeriodic" onclick="togglePeroidicAlarm()" /> @Html.DisplayNameFor(model => model.Periodic)
                    </label>
                    <span asp-validation-for="Periodic" class="text-danger"></span>
                </div>
            </div>

            <div class="row justify-content-between">
                <div class="col-md-5">
                    <div class="form-group" id="Alarm">
                            <label asp-for="Alarm" class="control-label fw-bold"></label>
                            <input asp-for="Alarm" class="form-control form-control bg-light" />
                        <span asp-validation-for="Alarm" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-md-5">
                        <div class="form-group" id="PeriodicAlarm">
                            <label asp-for="TimeFrameSelection" class="control-label fw-bold"></label>
                            <select asp-for="TimeFrameSelection" class="form-control form-control bg-light">
                            <option value="1">Daily</option>
                            <option value="2">Weekly</option>
                            <option value="3">Monthly</option>
                            <option value="4">Yearly</option>
                        </select>
                        <span asp-validation-for="TimeFrameSelection" class="text-danger"></span>
                    </div>
                </div>

            </div>
            <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="PeriodicAlarm" />

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
        </div>
    </div>
</div>

<hr />
<br />

<div class="text-center">
    <a asp-action="Index">Back to List</a>
</div>


    <script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=" crossorigin="anonymous"></script>
 
    <script>
        function toggleAlarm() {
            const hasAlarmValue = document.getElementById('hasAlarm').checked;
            const alarmInput = document.getElementById('Alarm');
            const hasPeriodic = document.getElementById('hasPeriodic');
            const PeriodicAlarm = document.getElementById('PeriodicAlarm');

            if (hasAlarmValue == true) {
                alarmInput.style.display = 'block'; // Show the input field
                

            } else {
                //alarmInput.value = '';
                alarmInput.style.display = 'none'; // Hide the input field
                PeriodicAlarm.style.display = 'none'; 
                hasPeriodic.checked = false;
            }
        }

        function togglePeroidicAlarm() {
            const hasPeriodic = document.getElementById('hasPeriodic').checked == true;
            const PeriodicAlarm = document.getElementById('PeriodicAlarm');


            if (hasPeriodic == true) {
                PeriodicAlarm.style.display = 'block'; // Show the input field


            } else {
                
                PeriodicAlarm.style.display = 'none'; // Hide the input field
            }
        }
    </script>



    <script>
        window.onload = function () {
                const hasAlarmValue = document.getElementById('hasAlarm').checked;
                const alarmInput = document.getElementById('Alarm');

                if (hasAlarmValue) {
                    alarmInput.style.display = 'block'; // Show the input field
                } else {
                    alarmInput.style.display = 'none'; // Hide the input field
                }

                const hasPeriodic = document.getElementById('hasPeriodic').checked;
                const PeriodicAlarm = document.getElementById('PeriodicAlarm');

                if (hasPeriodic) {
                    PeriodicAlarm.style.display = 'block'; // Show the input field
                } else {
                    PeriodicAlarm.style.display = 'none'; // Hide the input field
                }
            };
    </script>

@using WebAppRedo.Data.Models
@model IEnumerable<ReminderVM>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center">Task Reminder</h1>

<br />
<div class="text-center">
    <button class="bg-primary rounded-pill">
        <a asp-action="Create" class="text-white text-decoration-none">Add New Task</a>
    </button>
</div>



<br />
<hr />
<br />
<h4 class="text-center">Active Reminders</h4>
<br />
<div class="container text-center justify-content-center">
    <div id="taskTable" class="text-center ">
        <table class="table table-bordered rounded-top bg-info text-black">
            <thead class="bg-secondary text-light">
                <tr class="bg-primary">
                    <th>
                        @Html.DisplayNameFor(model => model.IsComplete)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Alarm)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TimeFrameSelection)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PeriodicAlarm)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Where(modelItem => modelItem.IsComplete == false))
                {
                    <tr>
                        <td>
                            <div class="form-group form-check form-switch col">
                                <label class="form-check-label fw-bold">
                                    <input class="form-check-input toggle-cell" data-item-value="@item.IsComplete" type="checkbox" !checked />
                                </label>
                                <span class="text-danger"></span>
                            </div>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Alarm)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TimeFrameSelection)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PeriodicAlarm)
                        </td>
                        <td>
                            <button class="bg-primary rounded">
                                <a asp-action="Edit" asp-route-id="@item.Id" class="text-white text-decoration-none">Edit</a>
                            </button>
                            <button class="bg-primary rounded">
                                <a asp-action="Details" asp-route-id="@item.Id" class="text-white text-decoration-none">Details</a>
                            </button>
                            <button class="bg-danger rounded">
                                <a asp-action="Delete" asp-route-id="@item.Id" class="text-white text-decoration-none">Delete</a>
                            </button>
                            <br />
                            <button class="bg-primary rounded">
                                <a asp-action="UpdateIsComplete" asp-route-id="@item.Id" class="text-white text-decoration-none">Set to Complete</a>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
</div>
<br />
<h4 class="text-center">Completed Reminders</h4>
<br />
<div class="container text-center justify-content-center">
    <div id="taskTable" class="text-center ">
        <table class="table table-bordered rounded-top bg-info text-black">
            <thead class="bg-secondary text-light">
                <tr class="bg-primary">
                    <th>
                        @Html.DisplayNameFor(model => model.IsComplete)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Alarm)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TimeFrameSelection)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PeriodicAlarm)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Where(modelItem => modelItem.IsComplete == true))
                {
                    <tr>
                        <td>
                            <div class="form-group form-check form-switch col">
                                <label class="form-check-label fw-bold">
                                    <input class="form-check-input toggle-cell" data-item-value="@item.IsComplete" type="checkbox" checked />
                                </label>
                                <span class="text-danger"></span>
                            </div>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Alarm)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TimeFrameSelection)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PeriodicAlarm)
                        </td>
                        <td>
                            <button class="bg-primary rounded">
                                <a asp-action="Edit" asp-route-id="@item.Id" class="text-white text-decoration-none">Edit</a>
                            </button>
                            <button class="bg-primary rounded">
                                <a asp-action="Details" asp-route-id="@item.Id" class="text-white text-decoration-none">Details</a>
                            </button>
                            <button class="bg-danger rounded">
                                <a asp-action="Delete" asp-route-id="@item.Id" class="text-white text-decoration-none">Delete</a>
                            </button>
                            <br />
                            <button class="bg-primary rounded">
                                <a asp-action="UpdateIsComplete" asp-route-id="@item.Id" class="text-white text-decoration-none">Set to Active</a>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
</div>
<hr />


@* <script>
    $(document).ready(function () {
        $('.toggle-cell').change(function () {
            var itemId = $(this).data('item-id');
            var newValue = $(this).prop('checked'); // Get the new value (true or false)

            // Send an AJAX request to update the database
            $.ajax({
                url: '@Url.Action("UpdateIsComplete", "Reminders")',
                type: 'POST',
                data: { id: itemId, isComplete: newValue },
                success: function (result) {
                    // Handle success (e.g., update UI if needed)
                    console.log('Item updated successfully');
                },
                error: function () {
                    console.error('Error updating item');
                }
            });
        });
    }); *@
</script>